goal: 0 - x = 0

query:
(define-sort Nat () Int)
(define-fun Nat.sub ((x Nat) (y Nat)) Nat (ite (< x y) 0 (- x y)))
(assert (forall ((_uniq.144 Nat)) (=> (>= _uniq.144 0) (forall ((_uniq.145 Nat)) (=> (>= _uniq.145 0) (>= (Nat.sub _uniq.144 _uniq.145) 0))))))
(declare-const x Nat)
(assert (>= x 0))
(assert (not (= (Nat.sub 0 x) 0)))
(check-sat)

result: unsat
failed to reconstruct proof: could not parse solver output: incomplete input: expected a token, got none
solver stdout:

solver stderr:
Fatal failure within cvc5::internal::Node cvc5::internal::proof::LeanNodeConverter::convert(cvc5::internal::Node) at /home/hbarbosa/cvc/wt-leanprinter/src/proof/lean/lean_node_converter.cpp:276
Check failure

 tn.isInteger()
Only support integer rationals

