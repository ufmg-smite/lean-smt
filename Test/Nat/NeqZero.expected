goal: ∀ (x : Nat), x ≠ 0

query:
(assert (not (forall ((x Int)) (=> (>= x 0) (distinct x 0)))))
(check-sat)

result: sat

counter-model:
()
Test/Nat/NeqZero.lean:4:2: error: unable to prove goal, either it is false or you need to define more symbols with `smt [foo, bar]`
goal: ∀ (x : Nat), x + 1 ≠ 0

query:
(assert (not (forall ((x Int)) (=> (>= x 0) (distinct (+ x 1) 0)))))
(check-sat)

result: unsat
failed to reconstruct proof: could not parse solver output: incomplete input: expected a token, got none
solver stdout:

solver stderr:
Fatal failure within cvc5::internal::Node cvc5::internal::proof::LeanNodeConverter::convert(cvc5::internal::Node) at /home/user/projects/cvc5-haniel/src/proof/lean/lean_node_converter.cpp:478
Unreachable code reached Kind distinct is not supported

Test/Nat/NeqZero.lean:7:8: warning: declaration uses 'sorry'
