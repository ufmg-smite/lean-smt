goal: ∀ (a : G), op a (inv a) = e

query:
(declare-sort G 0)
(declare-fun op (G G) G)
(declare-const e G)
(assert (forall ((a G)) (= (op e a) a)))
(declare-fun inv (G) G)
(assert (forall ((a G)) (= (op (inv a) a) e)))
(assert (forall ((a G)) (forall ((b G)) (forall ((c G)) (= (op a (op b c)) (op (op a b) c))))))
(assert (not (forall ((a G)) (= (op a (inv a)) e))))
(check-sat)
Test/Examples/Demo.lean:9:8: warning: declaration uses 'sorry'
goal: ∀ (a : G), op a e = a

query:
(declare-sort G 0)
(declare-const e G)
(declare-fun op (G G) G)
(declare-fun inv (G) G)
(assert (forall ((a G)) (= (op a (inv a)) e)))
(assert (forall ((a G)) (= (op e a) a)))
(assert (forall ((a G)) (= (op (inv a) a) e)))
(assert (forall ((a G)) (forall ((b G)) (forall ((c G)) (= (op a (op b c)) (op (op a b) c))))))
(assert (not (forall ((a G)) (= (op a e) a))))
(check-sat)
Test/Examples/Demo.lean:14:8: warning: declaration uses 'sorry'
