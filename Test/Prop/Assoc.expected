goal: f p (f q r) = f (f p q) r

query:
(declare-const q Bool)
(declare-fun f (Bool Bool) Bool)
(declare-const r Bool)
(declare-const p Bool)
(assert (not (= (f p (f q r)) (f (f p q) r))))
(check-sat)

result: sat

counter-model:
(
(define-fun q () Bool false)
(define-fun f ((_arg_1 Bool) (_arg_2 Bool)) Bool (ite _arg_1 (not _arg_2) (and (not _arg_1) (not _arg_2))))
(define-fun r () Bool false)
(define-fun p () Bool true)
)
Test/Prop/Assoc.lean:5:2: error: unable to prove goal, either it is false or you need to define more symbols with `smt [foo, bar]`
